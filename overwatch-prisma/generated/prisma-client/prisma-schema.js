module.exports = {
        typeDefs: // Code generated by Prisma (prisma@1.29.0). DO NOT EDIT.
  // Please don't change this file manually but run `prisma generate` to update it.
  // For more information, please read the docs: https://www.prisma.io/docs/prisma-client/

/* GraphQL */ `type AggregateOverwatchPrisma {
  count: Int!
}

type BatchPayload {
  count: Long!
}

scalar Long

type Mutation {
  createOverwatchPrisma(data: OverwatchPrismaCreateInput!): OverwatchPrisma!
  updateOverwatchPrisma(data: OverwatchPrismaUpdateInput!, where: OverwatchPrismaWhereUniqueInput!): OverwatchPrisma
  updateManyOverwatchPrismas(data: OverwatchPrismaUpdateManyMutationInput!, where: OverwatchPrismaWhereInput): BatchPayload!
  upsertOverwatchPrisma(where: OverwatchPrismaWhereUniqueInput!, create: OverwatchPrismaCreateInput!, update: OverwatchPrismaUpdateInput!): OverwatchPrisma!
  deleteOverwatchPrisma(where: OverwatchPrismaWhereUniqueInput!): OverwatchPrisma
  deleteManyOverwatchPrismas(where: OverwatchPrismaWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

interface Node {
  id: ID!
}

type OverwatchPrisma {
  _id: ID!
  __v: Int
  class: String
  imageUrl: String
  name: String
  quote: String
  ultimate: String
  weapon: String
}

type OverwatchPrismaConnection {
  pageInfo: PageInfo!
  edges: [OverwatchPrismaEdge]!
  aggregate: AggregateOverwatchPrisma!
}

input OverwatchPrismaCreateInput {
  __v: Int
  class: String
  imageUrl: String
  name: String
  quote: String
  ultimate: String
  weapon: String
}

type OverwatchPrismaEdge {
  node: OverwatchPrisma!
  cursor: String!
}

enum OverwatchPrismaOrderByInput {
  _id_ASC
  _id_DESC
  __v_ASC
  __v_DESC
  class_ASC
  class_DESC
  imageUrl_ASC
  imageUrl_DESC
  name_ASC
  name_DESC
  quote_ASC
  quote_DESC
  ultimate_ASC
  ultimate_DESC
  weapon_ASC
  weapon_DESC
}

type OverwatchPrismaPreviousValues {
  _id: ID!
  __v: Int
  class: String
  imageUrl: String
  name: String
  quote: String
  ultimate: String
  weapon: String
}

type OverwatchPrismaSubscriptionPayload {
  mutation: MutationType!
  node: OverwatchPrisma
  updatedFields: [String!]
  previousValues: OverwatchPrismaPreviousValues
}

input OverwatchPrismaSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: OverwatchPrismaWhereInput
  AND: [OverwatchPrismaSubscriptionWhereInput!]
}

input OverwatchPrismaUpdateInput {
  __v: Int
  class: String
  imageUrl: String
  name: String
  quote: String
  ultimate: String
  weapon: String
}

input OverwatchPrismaUpdateManyMutationInput {
  __v: Int
  class: String
  imageUrl: String
  name: String
  quote: String
  ultimate: String
  weapon: String
}

input OverwatchPrismaWhereInput {
  _id: ID
  _id_not: ID
  _id_in: [ID!]
  _id_not_in: [ID!]
  _id_lt: ID
  _id_lte: ID
  _id_gt: ID
  _id_gte: ID
  _id_contains: ID
  _id_not_contains: ID
  _id_starts_with: ID
  _id_not_starts_with: ID
  _id_ends_with: ID
  _id_not_ends_with: ID
  __v: Int
  __v_not: Int
  __v_in: [Int!]
  __v_not_in: [Int!]
  __v_lt: Int
  __v_lte: Int
  __v_gt: Int
  __v_gte: Int
  class: String
  class_not: String
  class_in: [String!]
  class_not_in: [String!]
  class_lt: String
  class_lte: String
  class_gt: String
  class_gte: String
  class_contains: String
  class_not_contains: String
  class_starts_with: String
  class_not_starts_with: String
  class_ends_with: String
  class_not_ends_with: String
  imageUrl: String
  imageUrl_not: String
  imageUrl_in: [String!]
  imageUrl_not_in: [String!]
  imageUrl_lt: String
  imageUrl_lte: String
  imageUrl_gt: String
  imageUrl_gte: String
  imageUrl_contains: String
  imageUrl_not_contains: String
  imageUrl_starts_with: String
  imageUrl_not_starts_with: String
  imageUrl_ends_with: String
  imageUrl_not_ends_with: String
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  quote: String
  quote_not: String
  quote_in: [String!]
  quote_not_in: [String!]
  quote_lt: String
  quote_lte: String
  quote_gt: String
  quote_gte: String
  quote_contains: String
  quote_not_contains: String
  quote_starts_with: String
  quote_not_starts_with: String
  quote_ends_with: String
  quote_not_ends_with: String
  ultimate: String
  ultimate_not: String
  ultimate_in: [String!]
  ultimate_not_in: [String!]
  ultimate_lt: String
  ultimate_lte: String
  ultimate_gt: String
  ultimate_gte: String
  ultimate_contains: String
  ultimate_not_contains: String
  ultimate_starts_with: String
  ultimate_not_starts_with: String
  ultimate_ends_with: String
  ultimate_not_ends_with: String
  weapon: String
  weapon_not: String
  weapon_in: [String!]
  weapon_not_in: [String!]
  weapon_lt: String
  weapon_lte: String
  weapon_gt: String
  weapon_gte: String
  weapon_contains: String
  weapon_not_contains: String
  weapon_starts_with: String
  weapon_not_starts_with: String
  weapon_ends_with: String
  weapon_not_ends_with: String
  AND: [OverwatchPrismaWhereInput!]
}

input OverwatchPrismaWhereUniqueInput {
  _id: ID
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type Query {
  overwatchPrisma(where: OverwatchPrismaWhereUniqueInput!): OverwatchPrisma
  overwatchPrismas(where: OverwatchPrismaWhereInput, orderBy: OverwatchPrismaOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [OverwatchPrisma]!
  overwatchPrismasConnection(where: OverwatchPrismaWhereInput, orderBy: OverwatchPrismaOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): OverwatchPrismaConnection!
  node(id: ID!): Node
}

type Subscription {
  overwatchPrisma(where: OverwatchPrismaSubscriptionWhereInput): OverwatchPrismaSubscriptionPayload
}
`
      }
    